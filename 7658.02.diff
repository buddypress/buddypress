diff --git src/bp-core/classes/class-bp-core.php src/bp-core/classes/class-bp-core.php
index a5e028c1f..3a1f0c420 100644
--- src/bp-core/classes/class-bp-core.php
+++ src/bp-core/classes/class-bp-core.php
@@ -238,9 +238,8 @@ class BP_Core extends BP_Component {
 		// Logged in user is the 'current_user'.
 		$current_user = wp_get_current_user();
 
-		// The user ID of the user who is currently logged in.
-		$bp->loggedin_user     = new stdClass();
-		$bp->loggedin_user->id = isset( $current_user->ID ) ? $current_user->ID : 0;
+		// The user who is currently logged in.
+		$bp->loggedin_user = new BP_LoggedIn_User();
 
 		/** Avatars **********************************************************
 		 */
diff --git src/bp-core/classes/class-bp-loggedin-user.php src/bp-core/classes/class-bp-loggedin-user.php
new file mode 100644
index 000000000..5d14570e7
--- /dev/null
+++ src/bp-core/classes/class-bp-loggedin-user.php
@@ -0,0 +1,166 @@
+<?php
+/**
+ * Core component classes.
+ *
+ * @package BuddyPress
+ * @subpackage Core
+ * @since 14.0.0
+ */
+
+// Exit if accessed directly.
+defined( 'ABSPATH' ) || exit;
+
+/**
+ * Fetch an object which represents the logged-in user.
+ *
+ * The values are dynamic--they refer to the WordPress current user,
+ * which may change as actions and hooks are run.
+ * For example: The user may look logged in at the beginning of a poorly
+ * authenticated WP REST API request, but will be de-authenticated
+ * at `rest_cookie_check_errors()` and then would no longer be considered to
+ * be logged in.
+ *
+ * @property-read int    $id             The logged-in user's ID.
+ * @property-read array  $userdata       The logged-in user's userdata.
+ * @property-read bool   $is_super_admin Is the logged-in user a super admin?
+ * @property-read bool   $is_site_admin  Is the logged-in user a site admin?
+ * @property-read string $fullname       The logged-in user's display name.
+ * @property-read string $domain         The logged-in user's profile url.
+ */
+class BP_LoggedIn_User {
+
+	/**
+	 * The ID of the logged-in user.
+	 *
+	 * @since 14.0.0
+	 * @var int
+	 */
+	protected int $id;
+
+	/**
+	 * The logged-in user's data from the matching wp_users row.
+	 *
+	 * @since 14.0.0
+	 * @var array
+	 */
+	protected $userdata = array();
+
+	/**
+	 * Whether the logged-in user is a network admin or not.
+	 *
+	 * @since 14.0.0
+	 * @var bool
+	 */
+	protected $is_super_admin = false;
+
+	/**
+	 * Whether the logged-in user is a site admin or not.
+	 *
+	 * @since 14.0.0
+	 * @var bool
+	 */
+	protected $is_site_admin = false;
+
+	/**
+	 * The logged-in user's display name.
+	 *
+	 * @since 14.0.0
+	 * @var string
+	 */
+	protected $fullname = '';
+
+	/**
+	 * The logged-in user's profile URL.
+	 *
+	 * @since 14.0.0
+	 * @var string
+	 */
+	protected $domain = '';
+
+	/**
+	 * Constructor.
+	 *
+	 * Retrieves data for the currently logged-in user.
+	 *
+	 * @since 14.0.0
+	 */
+	public function __construct() {
+		$this->id = get_current_user_id();
+	}
+
+	/**
+	 * Magic getter.
+	 * Provides custom logic for getting protected properties.
+	 *
+	 * @since 14.0.0
+	 *
+	 * @param string $key Property name.
+	 * @return mixed
+	 */
+	public function __get( $key ) {
+		switch ( $key ) {
+			case 'id':
+				return get_current_user_id();
+
+			case 'userdata':
+				return WP_User::get_data_by( 'id', get_current_user_id() );
+
+			case 'fullname':
+				/**
+				* When profile sync is disabled, display_name may diverge from the xprofile
+				* fullname field value, and the xprofile field should take precedence.
+				*/
+				$retval = '';
+				if ( bp_disable_profile_sync() ) {
+					$retval = xprofile_get_field_data( bp_xprofile_fullname_field_name(), get_current_user_id() );
+				}
+
+				/**
+				 * Common case: If BP profile and WP profiles are synced,
+				 * then we use the WP value.
+				 * This is also used if the xprofile field data is preferred, but empty.
+				 */
+				if ( ! bp_disable_profile_sync() || ! $retval ) {
+					$retval = bp_core_get_user_displayname( get_current_user_id() );
+				}
+
+				return $retval;
+
+			case 'is_super_admin':
+			case 'is_site_admin':
+				return is_super_admin( get_current_user_id() );
+
+			case 'domain':
+				return bp_members_get_user_url( get_current_user_id() );
+
+			default :
+				return isset( $this->{$key} ) ? $this->{$key} : null;
+		 }
+	}
+
+	/**
+	 * Magic issetter.
+	 *
+	 * Used to maintain backward compatibility for properties that are now
+	 * accessible only via magic method.
+	 *
+	 * @since 14.0.0
+	 *
+	 * @param string $key Property name.
+	 * @return bool
+	 */
+	public function __isset( $key ) {
+		switch ( $key ) {
+			case 'id' :
+			case 'userdata' :
+			case 'fullname' :
+			case 'is_super_admin' :
+			case 'is_site_admin' :
+			case 'domain':
+				return true;
+
+			default :
+				return isset( $this->{$key} );
+		 }
+	}
+}
\ No newline at end of file
diff --git src/bp-members/classes/class-bp-members-component.php src/bp-members/classes/class-bp-members-component.php
index 9da16b1a6..b2cb3b79c 100644
--- src/bp-members/classes/class-bp-members-component.php
+++ src/bp-members/classes/class-bp-members-component.php
@@ -233,21 +233,6 @@ class BP_Members_Component extends BP_Component {
 		// Init the User's ID to use to build the Nav for.
 		$user_id = bp_loggedin_user_id();
 
-		/** Logged in user ***************************************************
-		 */
-
-		// The core userdata of the user who is currently logged in.
-		$bp->loggedin_user->userdata = bp_core_get_core_userdata( $user_id );
-
-		// Fetch the full name for the logged in user.
-		$bp->loggedin_user->fullname = isset( $bp->loggedin_user->userdata->display_name ) ? $bp->loggedin_user->userdata->display_name : '';
-
-		// Hits the DB on single WP installs so get this separately.
-		$bp->loggedin_user->is_super_admin = $bp->loggedin_user->is_site_admin = is_super_admin( $user_id );
-
-		// The domain for the user currently logged in. eg: http://example.com/members/andy.
-		$bp->loggedin_user->domain = bp_members_get_user_url( $user_id );
-
 		/**
 		 * Set the Displayed user for the classic BuddyPress. This should only be the case when the
 		 * legacy parser is on. When BP Rewrites are on, the displayed user is set in
diff --git src/bp-xprofile/bp-xprofile-functions.php src/bp-xprofile/bp-xprofile-functions.php
index 7a7a293f0..90401de84 100644
--- src/bp-xprofile/bp-xprofile-functions.php
+++ src/bp-xprofile/bp-xprofile-functions.php
@@ -748,10 +748,6 @@ function xprofile_override_user_fullnames() {
 		return;
 	}
 
-	if ( bp_loggedin_user_id() ) {
-		buddypress()->loggedin_user->fullname = bp_core_get_user_displayname( bp_loggedin_user_id() );
-	}
-
 	if ( bp_displayed_user_id() ) {
 		buddypress()->displayed_user->fullname = bp_core_get_user_displayname( bp_displayed_user_id() );
 	}
diff --git src/class-buddypress.php src/class-buddypress.php
index 1db02b577..b8ac8b557 100644
--- src/class-buddypress.php
+++ src/class-buddypress.php
@@ -726,6 +726,7 @@ class BuddyPress {
 			'BP_Recursive_Query'                         => 'core',
 			'BP_Suggestions'                             => 'core',
 			'BP_Theme_Compat'                            => 'core',
+			'BP_LoggedIn_User'                           => 'core',
 			'BP_User_Query'                              => 'core',
 			'BP_Walker_Category_Checklist'               => 'core',
 			'BP_Walker_Nav_Menu'                         => 'core',
diff --git tests/phpunit/includes/testcase.php tests/phpunit/includes/testcase.php
index 676e64246..5d58a48d2 100644
--- tests/phpunit/includes/testcase.php
+++ tests/phpunit/includes/testcase.php
@@ -132,7 +132,7 @@ class BP_UnitTestCase extends WP_UnitTestCase {
 		buddypress()->is_single_item        = false;
 		buddypress()->current_user          = new stdClass();
 		buddypress()->displayed_user        = new stdClass();
-		buddypress()->loggedin_user         = new stdClass();
+		buddypress()->loggedin_user         = new BP_LoggedIn_User;
 		buddypress()->pages                 = array();
 		buddypress()->groups->types         = array();
 
@@ -218,14 +218,6 @@ class BP_UnitTestCase extends WP_UnitTestCase {
 	 * have to do a bit more work to change it
 	 */
 	public static function set_current_user( $user_id ) {
-		$bp = buddypress();
-
-		$bp->loggedin_user->id = $user_id;
-		$bp->loggedin_user->fullname       = bp_core_get_user_displayname( $user_id );
-		$bp->loggedin_user->is_super_admin = $bp->loggedin_user->is_site_admin = is_super_admin( $user_id );
-		$bp->loggedin_user->domain         = bp_members_get_user_url( $user_id );
-		$bp->loggedin_user->userdata       = bp_core_get_core_userdata( $user_id );
-
 		wp_set_current_user( $user_id );
 	}
 
